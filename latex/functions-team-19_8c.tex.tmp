\hypertarget{functions-team-19_8c}{}\doxysection{functions-\/team-\/19.c File Reference}
\label{functions-team-19_8c}\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}}


Ficheiro que contém todas as funções necessárias para o funcionamento do programa principal.  


{\ttfamily \#include $<$stdio.\+h$>$}\newline
{\ttfamily \#include $<$math.\+h$>$}\newline
Include dependency graph for functions-\/team-\/19.c\+:
% FIG 0
\doxysubsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \mbox{\hyperlink{functions-team-19_8c_a7fbea99ae4f6bb57e9a5fd5fa45022b5}{limpa\+Input}} ()
\item 
void \mbox{\hyperlink{functions-team-19_8c_a02ee2e0b048abb0797073fd5bacdb71c}{helpflag}} ()
\item 
void \mbox{\hyperlink{functions-team-19_8c_a4b3d99b8e5a511b70423289be0075231}{separacao}} ()
\item 
int \mbox{\hyperlink{functions-team-19_8c_ae83fcdbeb2b6757fc741ae953b633ee1}{menu}} ()
\item 
void \mbox{\hyperlink{functions-team-19_8c_a51c853815d56369e41cbc39e0efac649}{ajuda}} ()
\item 
void \mbox{\hyperlink{functions-team-19_8c_a36ad170338d7feb540a9ce2f1f8bb1b0}{intro}} ()
\item 
void \mbox{\hyperlink{functions-team-19_8c_ac03715c190013e232059a79e829c65e5}{matriz16x2}} (int $\ast$array\+\_\+unidim, int nova\+\_\+matriz\mbox{[}2\mbox{]}\mbox{[}16\mbox{]})
\item 
int \mbox{\hyperlink{functions-team-19_8c_a4a3a82e35fcb6bbbbb154b3dbb0f3a02}{min}} (int $\ast$array\+\_\+unidim, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_ad46fa7a247158ae82df85d88b27bcb6c}{ordem\+Crescente}} (int $\ast$array\+\_\+unidim, int $\ast$array\+\_\+crescente, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_a02acf3e031a8dcc2e31f24a6182924a6}{div2}} (float $\ast$array\+\_\+unidim, float $\ast$array\+\_\+dividido, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_a0202bfb56acd5a336a521478fc657a55}{int\+To\+Float}} (int $\ast$array\+\_\+int, float $\ast$array\+\_\+float, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_a54b243dab3bdeef912166f092333c50f}{int\+To\+Float\+Bi}} (int array\+\_\+int\mbox{[}16\mbox{]}\mbox{[}16\mbox{]}, float array\+\_\+float\mbox{[}16\mbox{]}\mbox{[}16\mbox{]})
\item 
int \mbox{\hyperlink{functions-team-19_8c_ad6e95525479a0b0a869f952c2bb5412a}{nums\+Div3}} (int $\ast$array\+\_\+unidim, int $\ast$nums\+Div3, int n)
\item 
int \mbox{\hyperlink{functions-team-19_8c_a2e1c2ae0d12ed33ded88a4611763b64f}{produto\+Interno}} (int $\ast$array1, int $\ast$array2, int n)
\item 
int \mbox{\hyperlink{functions-team-19_8c_a8dc809c05cb53e745d13df5d5641afc1}{nums\+Primos}} (int $\ast$array\+\_\+uni, int $\ast$array\+\_\+primos, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_a650da82ef75adbdfd6a07e13e346eeed}{matrix16x16}} (int matriz\+\_\+final\mbox{[}16\mbox{]}\mbox{[}16\mbox{]}, int $\ast$matriz1, int $\ast$matriz2)
\item 
int \mbox{\hyperlink{functions-team-19_8c_a5ec896b2f9d8c9af75045d372498c77c}{verifica\+Nums\+Iguais}} (float $\ast$matriz, int n)
\item 
int \mbox{\hyperlink{functions-team-19_8c_a4f748e573a6da657a38c71480dd7062a}{verifica\+Zeros}} (float $\ast$matriz, int n)
\item 
void \mbox{\hyperlink{functions-team-19_8c_a9cd00620101945576b27b79b01badaea}{condensa}} (float matriz\mbox{[}16\mbox{]}\mbox{[}16\mbox{]})
\end{DoxyCompactItemize}


\doxysubsection{Detailed Description}
Ficheiro que contém todas as funções necessárias para o funcionamento do programa principal. 

\begin{DoxyAuthor}{Author}
Guilherme Teixeira / Guilherme Nunes / João Martins / Tiago Ribeiro / Henrique Policarpo. 
\end{DoxyAuthor}
\begin{DoxyVersion}{Version}
1.\+0. 
\end{DoxyVersion}


\doxysubsection{Function Documentation}
\mbox{\Hypertarget{functions-team-19_8c_a51c853815d56369e41cbc39e0efac649}\label{functions-team-19_8c_a51c853815d56369e41cbc39e0efac649}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!ajuda@{ajuda}}
\index{ajuda@{ajuda}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{ajuda()}{ajuda()}}
{\footnotesize\ttfamily void ajuda (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que imprime uma tablea de ajudas. \mbox{\Hypertarget{functions-team-19_8c_a9cd00620101945576b27b79b01badaea}\label{functions-team-19_8c_a9cd00620101945576b27b79b01badaea}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!condensa@{condensa}}
\index{condensa@{condensa}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{condensa()}{condensa()}}
{\footnotesize\ttfamily void condensa (\begin{DoxyParamCaption}\item[{float}]{matriz\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} }\end{DoxyParamCaption})}

Função responsável por deixar a matriz na sua forma condensada.


\begin{DoxyParams}{Parameters}
{\em float} & matriz\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} -\/ Matriz 16x16 que pretendemos condensar. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_a02acf3e031a8dcc2e31f24a6182924a6}\label{functions-team-19_8c_a02acf3e031a8dcc2e31f24a6182924a6}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!div2@{div2}}
\index{div2@{div2}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{div2()}{div2()}}
{\footnotesize\ttfamily void div2 (\begin{DoxyParamCaption}\item[{float $\ast$}]{array\+\_\+unidim,  }\item[{float $\ast$}]{array\+\_\+dividido,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por dividir todos os valores do array por 2.


\begin{DoxyParams}{Parameters}
{\em float} & $\ast$array\+\_\+unidim -\/ Array unidimensional que pretendemos dividir por 2. \\
\hline
{\em float} & $\ast$array\+\_\+dividido -\/ Array no qual serão armazenados os elementos divididos por 2. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+unidim. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_a02ee2e0b048abb0797073fd5bacdb71c}\label{functions-team-19_8c_a02ee2e0b048abb0797073fd5bacdb71c}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!helpflag@{helpflag}}
\index{helpflag@{helpflag}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{helpflag()}{helpflag()}}
{\footnotesize\ttfamily void helpflag (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que imprime ajuda caso o programa seja executado na forma \char`\"{}./main.\+exe -\/-\/help\char`\"{}. \mbox{\Hypertarget{functions-team-19_8c_a36ad170338d7feb540a9ce2f1f8bb1b0}\label{functions-team-19_8c_a36ad170338d7feb540a9ce2f1f8bb1b0}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!intro@{intro}}
\index{intro@{intro}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{intro()}{intro()}}
{\footnotesize\ttfamily void intro (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que imprime uma mini-\/intro para o programa. \mbox{\Hypertarget{functions-team-19_8c_a0202bfb56acd5a336a521478fc657a55}\label{functions-team-19_8c_a0202bfb56acd5a336a521478fc657a55}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!intToFloat@{intToFloat}}
\index{intToFloat@{intToFloat}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{intToFloat()}{intToFloat()}}
{\footnotesize\ttfamily void int\+To\+Float (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+int,  }\item[{float $\ast$}]{array\+\_\+float,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por \char`\"{}transformar\char`\"{} um array unidimensional inteiro em float (útil no decorrer do código).


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+int -\/ Array inteiro unidimensional. \\
\hline
{\em float} & $\ast$array\+\_\+float -\/ Array float unidimensional que será criado. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+unidim. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_a54b243dab3bdeef912166f092333c50f}\label{functions-team-19_8c_a54b243dab3bdeef912166f092333c50f}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!intToFloatBi@{intToFloatBi}}
\index{intToFloatBi@{intToFloatBi}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{intToFloatBi()}{intToFloatBi()}}
{\footnotesize\ttfamily void int\+To\+Float\+Bi (\begin{DoxyParamCaption}\item[{int}]{array\+\_\+int\mbox{[}16\mbox{]}\mbox{[}16\mbox{]},  }\item[{float}]{array\+\_\+float\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} }\end{DoxyParamCaption})}

Função responsável por \char`\"{}transformar\char`\"{} um array bidimensional inteiro em float (útil no decorrer do código).


\begin{DoxyParams}{Parameters}
{\em int} & array\+\_\+int\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} -\/ Array inteiro bidimensional 16x16. \\
\hline
{\em float} & array\+\_\+float\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} -\/ Array float bidimensional 16x16 que será criado. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_a7fbea99ae4f6bb57e9a5fd5fa45022b5}\label{functions-team-19_8c_a7fbea99ae4f6bb57e9a5fd5fa45022b5}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!limpaInput@{limpaInput}}
\index{limpaInput@{limpaInput}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{limpaInput()}{limpaInput()}}
{\footnotesize\ttfamily void limpa\+Input (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que limpa o stdin. \mbox{\Hypertarget{functions-team-19_8c_a650da82ef75adbdfd6a07e13e346eeed}\label{functions-team-19_8c_a650da82ef75adbdfd6a07e13e346eeed}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!matrix16x16@{matrix16x16}}
\index{matrix16x16@{matrix16x16}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{matrix16x16()}{matrix16x16()}}
{\footnotesize\ttfamily void matrix16x16 (\begin{DoxyParamCaption}\item[{int}]{matriz\+\_\+final\mbox{[}16\mbox{]}\mbox{[}16\mbox{]},  }\item[{int $\ast$}]{matriz1,  }\item[{int $\ast$}]{matriz2 }\end{DoxyParamCaption})}

Função responsável por criar uma matriz 16x16 resultante da multiplicação de matriz1 com matriz2.


\begin{DoxyParams}{Parameters}
{\em int} & matriz\+\_\+final\mbox{[}16\mbox{]}\mbox{[}16\mbox{]} -\/ Matriz 16x16 resultante da multiplicação de matriz1 com matriz2. \\
\hline
{\em int} & $\ast$matriz1 -\/ Array unidimensional de 16 elementos. \\
\hline
{\em int} & $\ast$matriz2 -\/ Array unidimensional de 16 elementos.\\
\hline
\end{DoxyParams}
O tamanho tanto da matriz1 como da matriz2 deve ser de 16. \mbox{\Hypertarget{functions-team-19_8c_ac03715c190013e232059a79e829c65e5}\label{functions-team-19_8c_ac03715c190013e232059a79e829c65e5}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!matriz16x2@{matriz16x2}}
\index{matriz16x2@{matriz16x2}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{matriz16x2()}{matriz16x2()}}
{\footnotesize\ttfamily void matriz16x2 (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+unidim,  }\item[{int}]{nova\+\_\+matriz\mbox{[}2\mbox{]}\mbox{[}16\mbox{]} }\end{DoxyParamCaption})}

Função cria uma matriz 16x2 em que a primeira linha é formada pelos elementos de $\ast$array\+\_\+unidim enquanto que a segunda surge a partir do quádruplo desses mesmos elementos.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+unidim -\/ Array unidimensional que formará a primeira linha. \\
\hline
{\em int} & nova\+\_\+matriz\mbox{[}2\mbox{]}\mbox{[}16\mbox{]} -\/ Array 16x2 que será criado e que contém a matriz pretendida. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_ae83fcdbeb2b6757fc741ae953b633ee1}\label{functions-team-19_8c_ae83fcdbeb2b6757fc741ae953b633ee1}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!menu@{menu}}
\index{menu@{menu}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{menu()}{menu()}}
{\footnotesize\ttfamily int menu (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que imprime o M\+E\+NU P\+R\+I\+N\+C\+I\+P\+AL.

\begin{DoxyReturn}{Returns}
A opção do M\+E\+NU, escolhida pelo utilizador do programa. 
\end{DoxyReturn}
\mbox{\Hypertarget{functions-team-19_8c_a4a3a82e35fcb6bbbbb154b3dbb0f3a02}\label{functions-team-19_8c_a4a3a82e35fcb6bbbbb154b3dbb0f3a02}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!min@{min}}
\index{min@{min}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{min()}{min()}}
{\footnotesize\ttfamily int min (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+unidim,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função quer devolve o menor elemento dentro do vetor pretendido.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+unidim -\/ Array unidimensional no qual será procurado o valor mínimo. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+unidim.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
O mínimo no vetor passado como argumento. 
\end{DoxyReturn}
\mbox{\Hypertarget{functions-team-19_8c_ad6e95525479a0b0a869f952c2bb5412a}\label{functions-team-19_8c_ad6e95525479a0b0a869f952c2bb5412a}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!numsDiv3@{numsDiv3}}
\index{numsDiv3@{numsDiv3}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{numsDiv3()}{numsDiv3()}}
{\footnotesize\ttfamily int nums\+Div3 (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+unidim,  }\item[{int $\ast$}]{nums\+Div3,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por criar um array com os números presentes no array\+\_\+unidim que são divisíveis por 3.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+unidim -\/ Array inteiro unidimensional. \\
\hline
{\em int} & $\ast$nums\+Div3 -\/ Array inteiro unidimensional onde serão colocados os números pretendidos. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+unidim.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Posição do último número divísivel por 3 no array nums\+Div3 (útil no decorrer do código). (caso não hajam números divisíveis por 3 retorna -\/2) 
\end{DoxyReturn}
\mbox{\Hypertarget{functions-team-19_8c_a8dc809c05cb53e745d13df5d5641afc1}\label{functions-team-19_8c_a8dc809c05cb53e745d13df5d5641afc1}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!numsPrimos@{numsPrimos}}
\index{numsPrimos@{numsPrimos}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{numsPrimos()}{numsPrimos()}}
{\footnotesize\ttfamily int nums\+Primos (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+uni,  }\item[{int $\ast$}]{array\+\_\+primos,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por criar um novo array formado pelos números primos do array passado como 1ª parâmetro.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+uni -\/ Array unidimensional no qual pretendemos ver os números primos. \\
\hline
{\em int} & int $\ast$array\+\_\+primos -\/ Array no qual serão armazenados os elementos primos do vetor array\+\_\+uni. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+uni.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Posição do último número primo no array array\+\_\+primos (útil no decorrer do código). 
\end{DoxyReturn}
\mbox{\Hypertarget{functions-team-19_8c_ad46fa7a247158ae82df85d88b27bcb6c}\label{functions-team-19_8c_ad46fa7a247158ae82df85d88b27bcb6c}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!ordemCrescente@{ordemCrescente}}
\index{ordemCrescente@{ordemCrescente}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{ordemCrescente()}{ordemCrescente()}}
{\footnotesize\ttfamily void ordem\+Crescente (\begin{DoxyParamCaption}\item[{int $\ast$}]{array\+\_\+unidim,  }\item[{int $\ast$}]{array\+\_\+crescente,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função que retorna o vetor que foi passado como 1º parâmetro, ordenado.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array\+\_\+unidim -\/ Array unidimensional que pretendemos ordenar. \\
\hline
{\em int} & $\ast$array\+\_\+crescente -\/ Array no qual serão armazenados os elementos ordenados. \\
\hline
{\em int} & n -\/ Tamanho do array\+\_\+unidim. \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{functions-team-19_8c_a2e1c2ae0d12ed33ded88a4611763b64f}\label{functions-team-19_8c_a2e1c2ae0d12ed33ded88a4611763b64f}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!produtoInterno@{produtoInterno}}
\index{produtoInterno@{produtoInterno}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{produtoInterno()}{produtoInterno()}}
{\footnotesize\ttfamily int produto\+Interno (\begin{DoxyParamCaption}\item[{int $\ast$}]{array1,  }\item[{int $\ast$}]{array2,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por devolver o produto interno dos arrays passados como parâmetros.


\begin{DoxyParams}{Parameters}
{\em int} & $\ast$array1 -\/ Array inteiro unidimensional. \\
\hline
{\em int} & int $\ast$array2 -\/ Array inteiro unidimensional. \\
\hline
{\em int} & n -\/ Tamanho dos arrays.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Produto interno.
\end{DoxyReturn}
Para a função funcionar corretamente, o tamanho de array1 tem de ser igual ao tamanho de array2. \mbox{\Hypertarget{functions-team-19_8c_a4b3d99b8e5a511b70423289be0075231}\label{functions-team-19_8c_a4b3d99b8e5a511b70423289be0075231}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!separacao@{separacao}}
\index{separacao@{separacao}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{separacao()}{separacao()}}
{\footnotesize\ttfamily void separacao (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})}

Função que imprime uma linha horizontal para organização. \mbox{\Hypertarget{functions-team-19_8c_a5ec896b2f9d8c9af75045d372498c77c}\label{functions-team-19_8c_a5ec896b2f9d8c9af75045d372498c77c}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!verificaNumsIguais@{verificaNumsIguais}}
\index{verificaNumsIguais@{verificaNumsIguais}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{verificaNumsIguais()}{verificaNumsIguais()}}
{\footnotesize\ttfamily int verifica\+Nums\+Iguais (\begin{DoxyParamCaption}\item[{float $\ast$}]{matriz,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por identificar se existem números repetidos na matriz unidimensional.


\begin{DoxyParams}{Parameters}
{\em float} & $\ast$matriz -\/ Matriz float unidimensional. \\
\hline
{\em int} & n -\/ Tamanho da matriz.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 se houverem números que se repetem. 

0 se não houver números repetidos. 
\end{DoxyReturn}
\mbox{\Hypertarget{functions-team-19_8c_a4f748e573a6da657a38c71480dd7062a}\label{functions-team-19_8c_a4f748e573a6da657a38c71480dd7062a}} 
\index{functions-\/team-\/19.c@{functions-\/team-\/19.c}!verificaZeros@{verificaZeros}}
\index{verificaZeros@{verificaZeros}!functions-\/team-\/19.c@{functions-\/team-\/19.c}}
\doxysubsubsection{\texorpdfstring{verificaZeros()}{verificaZeros()}}
{\footnotesize\ttfamily int verifica\+Zeros (\begin{DoxyParamCaption}\item[{float $\ast$}]{matriz,  }\item[{int}]{n }\end{DoxyParamCaption})}

Função responsável por identificar se existem zeros na matriz unidimensional.


\begin{DoxyParams}{Parameters}
{\em float} & $\ast$matriz -\/ Matriz float unidimensional. \\
\hline
{\em int} & n -\/ Tamanho da matriz.\\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
1 se houverem zeros na matirz. 

0 se não houver zeros na matriz. 
\end{DoxyReturn}
